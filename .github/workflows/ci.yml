name: Tests

on:
  push:
    paths-ignore:
      - '**.md'
  pull_request:
    paths-ignore:
      - '**.md'

env:
  GO111MODULE: on
  GOPROXY: "https://proxy.golang.org"

jobs:
  build:
    name: Test on ${{matrix.os}} @Go${{ matrix.go-version }}
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        go-version: ["1.16.x", "1.17.x"]
        os: [ubuntu-latest]
    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      redis:
        # Docker Hub image
        image: redis
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps port 6379 on service container to the host
          - 6379:6379

    steps:
      - name: Set up Go ${{ matrix.go-version }}
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Print Go environment
        id: vars
        run: |
          printf "Using go at: $(which go)\n"
          printf "Go version: $(go version)\n"
          printf "\n\nGo environment:\n\n"
          go env
          printf "\n\nSystem environment:\n\n"
          env
          # Calculate the short SHA1 hash of the git commit
          echo "::set-output name=short_sha::$(git rev-parse --short HEAD)"
          echo "::set-output name=go_cache::$(go env GOCACHE)"

      - name: Cache go modules
        uses: actions/cache@v2
        with:
          path: |
            ${{ steps.vars.outputs.go_cache }}
            ~/go/pkg/mod
          key: ${{ runner.os }}-${{ matrix.go-version }}-go-ci-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.go-version }}-go-ci

      - name: Unit test
        run: |
          go test -v -coverprofile=coverage -covermode=atomic ./...
        env:
          REDIS_HOST: localhost
          REDIS_PORT: 6379

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          files: ./coverage
          flags: unittests
          verbose: true
